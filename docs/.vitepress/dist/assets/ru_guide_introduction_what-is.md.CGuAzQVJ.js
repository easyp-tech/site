import{_ as a,c as t,o,a3 as e}from"./chunks/framework.B_t12qEa.js";const P=JSON.parse('{"title":"Для чего EasyP?","description":"","frontmatter":{},"headers":[],"relativePath":"ru/guide/introduction/what-is.md","filePath":"ru/guide/introduction/what-is.md","lastUpdated":1715500446000}'),r={name:"ru/guide/introduction/what-is.md"},s=e('<h1 id="для-чего-easyp" tabindex="-1">Для чего EasyP? <a class="header-anchor" href="#для-чего-easyp" aria-label="Permalink to &quot;Для чего EasyP?&quot;">​</a></h1><p>EasyP — это комплексный набор инструментов для работы с файлами протокольных буферов (protobuf). Он сочетает в себе линтер, менеджер пакетов, генератор и средство проверки обратной совместимости для упрощения и оптимизации рабочего процесса protobuf.</p><div class="tip custom-block" style="padding-top:8px;"><p>Просто хотите попробовать? Перейдите к <a href="./quickstart">Quickstart</a>.</p></div><h2 id="упростите-разработку-protobuf" tabindex="-1">Упростите разработку Protobuf <a class="header-anchor" href="#упростите-разработку-protobuf" aria-label="Permalink to &quot;Упростите разработку Protobuf&quot;">​</a></h2><p>EasyP ускоряет разработку, обеспечивает согласованность файлов protobuf и предоставляет удобный механизм управление пакетами protobuf. Автоматизируя утомительные задачи и выявляя потенциальные ошибки, EasyP снижает риск остановок производства и обеспечивает более плавный опыт разработки.</p><h2 id="децентрализованное-управление-пакетами" tabindex="-1">Децентрализованное управление пакетами <a class="header-anchor" href="#децентрализованное-управление-пакетами" aria-label="Permalink to &quot;Децентрализованное управление пакетами&quot;">​</a></h2><p>В отличие от других инструментов, EasyP не использует централизованный сервер для распространения пакетов. Вместо этого любой репозиторий Git может служить источником пакетов, что дает вам больше гибкости и контроля над вашими файлами. зависимости. Такой подход устраняет привязку к поставщику и упрощает управление пакетами protobuf.</p><h2 id="бесшовная-миграция-из-buf" tabindex="-1">Бесшовная миграция из Buf <a class="header-anchor" href="#бесшовная-миграция-из-buf" aria-label="Permalink to &quot;Бесшовная миграция из Buf&quot;">​</a></h2><p>EasyP полностью обратно совместим с настройками Buf, обеспечивая плавный переход от Buf к EasyP. Вы можете легко переключиться на EasyP, не беспокоясь о проблемах совместимости или перенастройке настроек.</p><h2 id="ключевая-особенность" tabindex="-1">Ключевая особенность <a class="header-anchor" href="#ключевая-особенность" aria-label="Permalink to &quot;Ключевая особенность&quot;">​</a></h2><ul><li><p><strong>Linting</strong></p><p>Выявляйте ошибки и несоответствия в файлах protobuf с помощью встроенного линтера EasyP.</p></li><li><p><strong>Package Management</strong></p><p>Легко управляйте и распространяйте пакеты protobuf с помощью децентрализованного менеджера пакетов EasyP.</p></li><li><p><strong>Generator</strong></p><p>С легкостью создавайте код protobuf с помощью генератора кода EasyP.</p></li><li><p><strong>Breaking Changes Checking</strong></p><p>Убедитесь, что изменения API не нарушают обратную совместимость со встроенной программой проверки EasyP.</p></li></ul><p>Используя EasyP, вы можете сосредоточиться на разработке своего приложения, не беспокоясь о сложностях работы с protobuf.</p>',12),i=[s];function p(n,u,l,d,c,h){return o(),t("div",null,i)}const _=a(r,[["render",p]]);export{P as __pageData,_ as default};
