import{_ as l,c as i,a2 as o,o as a}from"./chunks/framework.CRQqvidf.js";const C=JSON.parse('{"title":"Linter","description":"","frontmatter":{},"headers":[],"relativePath":"ru/guide/cli/linter/linter.md","filePath":"ru/guide/cli/linter/linter.md","lastUpdated":1715515330000}'),c={name:"ru/guide/cli/linter/linter.md"};function d(E,e,_,r,A,t){return a(),i("div",null,e[0]||(e[0]=[o('<h1 id="linter" tabindex="-1">Linter <a class="header-anchor" href="#linter" aria-label="Permalink to &quot;Linter&quot;">​</a></h1><h2 id="для-чего-нам-еще-один-линтер" tabindex="-1">Для чего нам еще один линтер? <a class="header-anchor" href="#для-чего-нам-еще-один-линтер" aria-label="Permalink to &quot;Для чего нам еще один линтер?&quot;">​</a></h2><p>Линтеры играют решающую роль в разработке современного программного обеспечения. Соблюдая правила стиля и форматирования, линтеры помогают поддерживать качество кода, уменьшать количество потенциальных ошибок и обеспечивать чистоту и читабельность кодовой базы.</p><p>Это приводит к нескольким преимуществам:</p><ul><li><strong>Сокращение затрат на разработку.</strong> Линтеры выявляют ошибки на ранних этапах цикла разработки, экономя время и ресурсы, которые будут потрачены на отладку и исправление проблем позже.</li><li><strong>Улучшение совместной работы в команде.</strong> Стандартизированная база кода облегчает членам команды понимание кода друг друга и работу с ним, обеспечивая более плавную среду совместной работы.</li><li><strong>Эффективность бизнеса.</strong> Команды, использующие линтеры, часто создают код более высокого качества, что приводит к уменьшению производственных проблем и затрат на обслуживание. Это делает предприятия, применяющие методы линтинга, более конкурентоспособными и экономически эффективными.</li></ul><h2 id="категории" tabindex="-1">Категории <a class="header-anchor" href="#категории" aria-label="Permalink to &quot;Категории&quot;">​</a></h2><p>Для удовлетворения различных потребностей и предпочтений проекта EasyP линтер предоставляет предопределенные категории правил. В этих категориях группируются различные правила, что позволяет командам быстро выбирать уровень строгости или области, на которых они хотят сосредоточиться во время проверки.</p><p>Доступные категории:</p><ul><li><strong>MINIMAL:</strong> Базовые проверки для обеспечения целостности пакетов.</li><li><strong>BASIC:</strong> Дополнительные проверки соглашений об наименованиях.</li><li><strong>DEFAULT:</strong> Набор правил по умолчанию, которые следует использовать в большинстве проектов.</li><li><strong>COMMENTS:</strong> Обеспечивает наличие и правильное форматирование комментариев.</li><li><strong>UNARY_RPC:</strong> Особые правила для одинарных сервисов RPC.</li></ul><h3 id="группы-правил" tabindex="-1">Группы правил <a class="header-anchor" href="#группы-правил" aria-label="Permalink to &quot;Группы правил&quot;">​</a></h3><p>Ниже приведены группы правил по каждой категории:</p><h4 id="minimal" tabindex="-1">MINIMAL <a class="header-anchor" href="#minimal" aria-label="Permalink to &quot;MINIMAL&quot;">​</a></h4><ul><li><code>DIRECTORY_SAME_PACKAGE</code></li><li><code>PACKAGE_DEFINED</code></li><li><code>PACKAGE_DIRECTORY_MATCH</code></li><li><code>PACKAGE_SAME_DIRECTORY</code></li></ul><h4 id="basic" tabindex="-1">BASIC <a class="header-anchor" href="#basic" aria-label="Permalink to &quot;BASIC&quot;">​</a></h4><ul><li><code>ENUM_FIRST_VALUE_ZERO</code></li><li><code>ENUM_NO_ALLOW_ALIAS</code></li><li><code>ENUM_PASCAL_CASE</code></li><li><code>ENUM_VALUE_UPPER_SNAKE_CASE</code></li><li><code>FIELD_LOWER_SNAKE_CASE</code></li><li><code>IMPORT_NO_PUBLIC</code></li><li><code>IMPORT_NO_WEAK</code></li><li><code>IMPORT_USED</code></li><li><code>MESSAGE_PASCAL_CASE</code></li><li><code>ONEOF_LOWER_SNAKE_CASE</code></li><li><code>PACKAGE_LOWER_SNAKE_CASE</code></li><li><code>PACKAGE_SAME_CSHARP_NAMESPACE</code></li><li><code>PACKAGE_SAME_GO_PACKAGE</code></li><li><code>PACKAGE_SAME_JAVA_MULTIPLE_FILES</code></li><li><code>PACKAGE_SAME_JAVA_PACKAGE</code></li><li><code>PACKAGE_SAME_PHP_NAMESPACE</code></li><li><code>PACKAGE_SAME_RUBY_PACKAGE</code></li><li><code>PACKAGE_SAME_SWIFT_PREFIX</code></li><li><code>RPC_PASCAL_CASE</code></li><li><code>SERVICE_PASCAL_CASE</code></li></ul><h4 id="default" tabindex="-1">DEFAULT <a class="header-anchor" href="#default" aria-label="Permalink to &quot;DEFAULT&quot;">​</a></h4><ul><li><code>ENUM_VALUE_PREFIX</code></li><li><code>ENUM_ZERO_VALUE_SUFFIX</code></li><li><code>FILE_LOWER_SNAKE_CASE</code></li><li><code>RPC_REQUEST_RESPONSE_UNIQUE</code></li><li><code>RPC_REQUEST_STANDARD_NAME</code></li><li><code>RPC_RESPONSE_STANDARD_NAME</code></li><li><code>PACKAGE_VERSION_SUFFIX</code></li><li><code>SERVICE_SUFFIX</code></li></ul><h4 id="comments" tabindex="-1">COMMENTS <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;COMMENTS&quot;">​</a></h4><ul><li><code>COMMENT_ENUM</code></li><li><code>COMMENT_ENUM_VALUE</code></li><li><code>COMMENT_FIELD</code></li><li><code>COMMENT_MESSAGE</code></li><li><code>COMMENT_ONEOF</code></li><li><code>COMMENT_RPC</code></li><li><code>COMMENT_SERVICE</code></li></ul><h4 id="unary-rpc" tabindex="-1">UNARY_RPC <a class="header-anchor" href="#unary-rpc" aria-label="Permalink to &quot;UNARY_RPC&quot;">​</a></h4><ul><li><code>RPC_NO_CLIENT_STREAMING</code></li><li><code>RPC_NO_SERVER_STREAMING</code></li></ul><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>Использование линтера EasyP для ваших файлов прототипов может значительно улучшить рабочий процесс разработки, качество кода и общую удобство сопровождения проекта. Благодаря полной совместимости с линтером Buf команды могут легко выполнить миграцию и начать пользоваться преимуществами надежных функций и гибких возможностей конфигурации нашего инструмента.</p>',23)]))}const S=l(c,[["render",d]]);export{C as __pageData,S as default};
