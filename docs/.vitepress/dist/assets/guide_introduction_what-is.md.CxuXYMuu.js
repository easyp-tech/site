import{_ as e,c as a,o as t,a3 as o}from"./chunks/framework.DpTA0-ga.js";const g=JSON.parse('{"title":"What is EasyP?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction/what-is.md","filePath":"guide/introduction/what-is.md","lastUpdated":null}'),i={name:"guide/introduction/what-is.md"},r=o('<h1 id="what-is-easyp" tabindex="-1">What is EasyP? <a class="header-anchor" href="#what-is-easyp" aria-label="Permalink to &quot;What is EasyP?&quot;">​</a></h1><p>EasyP is a comprehensive toolset for working with Protocol Buffers (protobuf) files. It combines a linter, package manager, generator, and backward compatibility checker to simplify and streamline your protobuf workflow.</p><div class="tip custom-block" style="padding-top:8px;"><p>Just want to try it out? Skip to the <a href="./quickstart">Quickstart</a>.</p></div><h2 id="simplify-your-protobuf-development" tabindex="-1">Simplify Your Protobuf Development <a class="header-anchor" href="#simplify-your-protobuf-development" aria-label="Permalink to &quot;Simplify Your Protobuf Development&quot;">​</a></h2><p>EasyP accelerates development, ensures consistency across your protobuf files, and provides a convenient mechanism for managing protobuf packages. By automating tedious tasks and catching potential errors, EasyP reduces the risk of production breaks and ensures a smoother development experience.</p><h2 id="decentralized-package-management" tabindex="-1">Decentralized Package Management <a class="header-anchor" href="#decentralized-package-management" aria-label="Permalink to &quot;Decentralized Package Management&quot;">​</a></h2><p>Unlike other tools, EasyP doesn&#39;t rely on a centralized server for package distribution. Instead, any Git repository can serve as a package source, giving you more flexibility and control over your dependencies. This approach eliminates vendor lock-in and makes it easier to manage your protobuf packages.</p><h2 id="seamless-migration-from-buf" tabindex="-1">Seamless Migration from Buf <a class="header-anchor" href="#seamless-migration-from-buf" aria-label="Permalink to &quot;Seamless Migration from Buf&quot;">​</a></h2><p>EasyP is fully backward compatible with Buf settings, ensuring a smooth transition from Buf to EasyP. You can easily switch to EasyP without worrying about compatibility issues or reconfiguring your setup.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><p><strong>Linting</strong></p><p>Catch errors and inconsistencies in your protobuf files with EasyP&#39;s built-in linter.</p></li><li><p><strong>Package Management</strong></p><p>Easily manage and distribute protobuf packages using EasyP&#39;s decentralized package manager.</p></li><li><p><strong>Generator</strong></p><p>Generate protobuf code with ease using EasyP&#39;s code generator.</p></li><li><p><strong>Breaking Changes Checking</strong></p><p>Ensure that your API changes don&#39;t break backward compatibility with EasyP&#39;s built-in checker.</p></li></ul><p>By using EasyP, you can focus on developing your application without worrying about the complexities of working with protobuf.</p>',12),s=[r];function n(c,l,p,u,d,h){return t(),a("div",null,s)}const f=e(i,[["render",n]]);export{g as __pageData,f as default};
